                                                        01/08/2024:
                                                        -----------
-->We can change HTML elements by using JavaScript.for that we need to use one method which is "document.getElementById()"
for Ex:
        document.getElementById("demo").innerHTML = "Hello JavaScript";
here in the above last example we r finding the HTML element which is having id "demo" by using "document.getElementById" and by using innerHTML we r replacing HTML content in it.

-->We can use this method to
    1.to Change HTML elements
    2.to change HTML attributes
    3.to change HTML CSS.
-->Where can we write this Java Script code :
Java Script code will be written in "script" Tag either in <body> or <head> or as external file also.
for Ex:
       <script> Code can be written here </script>
-->There r few advantages if we write code in external file it will seperate HTML and Code.
-->Cached JavaScript files can speed up page loads
-->if we want to use multiple JavaScript files we need to use multiple Script tags.
 for Ex:
        <script sr="source1.js"></script>
        <scipt src="source2.js"></script>

Java Script Display Output methods :
------------------------------------
-->In JavaScript there r few methods to display output.They are :
      a. Writing into an HTML element, using innerHTML.
      b. Writing into the HTML output using document.write().
      c. Writing into an alert box, using window.alert().
      d. Writing into the browser console, using console.log().

-->Using innerHTML:
   To access an HTML element, JavaScript can use the document.getElementById(id) method.
   The id attribute defines the HTML element. The innerHTML property defines the HTML content to be changed.
   For Ex: document.getElementById("demo").innerHTML = "Hello JavaScript";

-->JavaScript Can Change HTML Attribute Values.

Where to write JavaScript :
---------------------------
               Javascript code is written in between script tags i.e.., <script>. We can write this script tag either in body or in head.we can also create an external file for this javascript code and we can call it in ou HTML code. we can write any nuber of scripts in a HTML document.
  Ex:
     <script>
            document.getElementById("demo").innerHTML = "My First JavaScript";
     </script>

                                                                 01/11/2024:
                                                                 -----------

JavaScript Functions and Events :
---------------------------------
JavaScript function is a block of code it will be executed when it is called by an events like click and dblclick etc..,.
Ex:
  <button type="button" onclick="myFunction()">Try it</button>

<script>
       function myFunction() {
       document.getElementById("demo").innerHTML = "Paragraph changed.";
       }
</script>

NOTE: Placing scripts at the bottom of the <body> element improves the display speed, because script interpretation slows down the display.
-----

External JavaScript :
---------------------
we can write javaScript code in an external file saved with an extension of .js .we can use this external file for multiple HTML documents.to call this file in our HTML code we need to use src attribute in script tag.
 Ex:
    <button type="button" onclick="myFunction()">Try it</button>

    <p>This example links to "myScript.js".</p>
    <p>(myFunction is stored in "myScript.js")</p>

    <script src="myScript.js"></script>

JavaScript OUTPUTS:
-------------------
to display output in javaScript we can use the following:
1.Writing into an HTML element, using innerHTML.
2.Writing into the HTML output using document.write().
3.Writing into an alert box, using window.alert().
4.Writing into the browser console, using console.log().

Using document.write():
-----------------------
This is used for testing purpose.
Calling document.write() when HTML is loaded will delete whole HTML content.
ex:
   <h1>My First Web Page</h1>
   <p>My first paragraph.</p>
   <button type="button" onclick="document.write(5 + 6)">Try it</button>

Using windows.alert():
----------------------
To display output in a alert box we can use this windows.alert();
Ex:
   <h1>My First Web Page</h1>
   <p>My first paragraph.</p>

   <script>
    window.alert(5 + 6);
   </script>

In JavaScript, the window object is the global scope object. This means that variables, properties, and methods by default belong to the window object. This also means that specifying the window keyword is optional.

Using console.log():
--------------------
This method is used for debugging purpose.Output will be displayed in browser console.
Ex:
  <script>
   console.log(5 + 6);
  </script>


JavaScript Print:
------------------
JavaScript does not have any print object or print methods.

You cannot access output devices from JavaScript.

The only exception is that you can call the window.print() method in the browser to print the content of the current window.
Ex:
   <button onclick="window.print()">Print this page</button>


                ----------------------*******************************************************----------------------------------------

JavaScript Statements:
----------------------
A computer program  is a set of instructions that to be executed by the computer.
In programming these instructions are called statements.
A JavaScript program is a list of programming statements.
Ex: 
   let x, y, z;    // Statement 1
   x = 5;          // Statement 2
   y = 6;          // Statement 3
   z = x + y;      // Statement 4

Javascript programs contains number of javascript statements. These statements executed one by one in a order.

NOTE:
----
In HTML, JavaScript programs are executed by the web browser.

Semicolons(;):
--------------
These semicolons seperates statements.
in javaScript these semicolon is not mandatory.

JavaScript WhiteSpaces:
-----------------------
Javascript ignores multiple spaces.we can use any number of spaces to make our code for better understanding.
Ex:
  The following lines are equivalent:
   let person = "Hege";
   let person="Hege";

maintaining spaces around operators is good practice  ( = + - * / )
Ex:
   let x + y = z;

line length and line breaks:
----------------------------
In programming if line length is more than 80 characters it is better to break the line at operators.
Ex:
    <script>
      document.getElementById("demo").innerHTML =
      "Hello Dolly!";
    </script>

Code Blocks:
------------
if we write group of statements together in between {} is code blocks.we can see this code bloks in functions.
Ex:
   function myFunction() {
     document.getElementById("demo1").innerHTML = "Hello Dolly!";
     document.getElementById("demo2").innerHTML = "How are you?";
   } 


Javascript Keywords:
--------------------
In Javascript every statement is often starts with a keyword to define what kind of action to be performed.
There are few keyword reserved in javascript .we shouldn't use this keywords as variable name.Few of the keywords are:
   var, let, const, function, return, if, switch, for, try.

 
  
